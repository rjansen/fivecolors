scalar Time
scalar Map

enum RarityName {
  Common
  Uncommon
  Rare
  MythicRare
  Special
  Land
  Promo
  Bonus
}

enum RarityAlias {
  C
  U
  R
  M
  S
  L
  P
  B
}

type Rarity {
  id: ID!
  name: RarityName!
  alias: RarityAlias!
}

type Set {
  id:    ID!
  name:  String!
  alias: String!
  asset: Map!
  createdAt: Time!
  updatedAt: Time
  deletedAt: Time
}

type Card {
  id: ID!
  name: String!
  types: [String!]!
  costs: [String!]
  numberCost: Float!
  idExternal: String!
  orderExternal: String
  idRarity: String!
  rarity: Rarity
  idSet: String!
  set: Set
  idAsset: String!
  rules: [String!]
  rate: Float
  rateVotes: Int
  artist: String
  flavor: String
  data: Map
  createdAt: Time!
  updatedAt: Time
  deletedAt: Time
}

input RarityFilter {
  id: ID
  name: RarityName
  alias: RarityAlias
}

input SetFilter {
  id: ID
  name: String
  alias: String
}

input CardFilter {
  name: String
  types: [String!]
  costs: [String!]
  set: SetFilter
  rarity: RarityFilter
}
